#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_buffer_reference : require
#extension GL_EXT_scalar_block_layout : require

hitAttributeEXT vec3 pointOnSphere;

vec2 calculateIntersections(vec3 rayOrigin, vec3 rayDirection, vec3 center, float radius) {
    vec3 oc = rayOrigin - center;
    float a = dot(rayDirection, rayDirection);
    float b = dot(oc, rayDirection);
    float c = dot(oc, oc) - radius * radius;
    float D = b * b - a * c;

    vec2 t = vec2(-1.0, -1.0);

    if (D >= 0.0) {
        const float t1 = (-b - sqrt(D)) / a;
        const float t2 = (-b + sqrt(D)) / a;
        t = vec2(t1, t2);
    }

    return t;
}

void main() {
    const vec3 origin = gl_WorldRayOriginEXT;
    const vec3 direction = gl_WorldRayDirectionEXT;
    const float tMin = gl_RayTminEXT;
    const float tMax = gl_RayTmaxEXT;

    reportIntersectionEXT(1.0f, 0);

//    vec2 t = calculateIntersections(origin, direction, vec3(0.0f, 0.0f, 0.0f), 0.5f);
//
//    pointOnSphere = origin + t.x * direction;
//    reportIntersectionEXT(t.x, 0);
//
//    pointOnSphere = origin + t.y * direction;
//    reportIntersectionEXT(t.y, 0);
}
